{"version":3,"sources":["Actions.js","pages/Home.js","components/Client.js","components/Editor.js","socket.js","pages/EditorPage.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","JOIN","JOINED","DISCONNECTED","CODE_CHANGE","SYNC_CODE","LEAVE","Home","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","roomId","setRoomId","_useState3","_useState4","username","setUsername","joinRoom","concat","state","toast","error","handleInputEnter","e","code","_jsxs","className","children","_jsx","src","alt","type","placeholder","onChange","target","value","onKeyUp","onClick","preventDefault","id","uuidv4","success","href","Client","_ref","Editor","socketRef","onCodeChange","editorRef","useRef","useEffect","_init","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","current","Codemirror","fromTextArea","document","getElementById","mode","name","json","theme","autoCloseTags","autoCloseBrackets","lineNumbers","on","instance","changes","origin","getValue","emit","ACTIONS","stop","apply","arguments","init","_ref2","setValue","off","initSocket","options","reconnectionAttempt","timeout","transports","abrupt","io","process","EditorPage","codeRef","location","useLocation","useParams","reactNavigator","clients","setClients","_copyRoomId","_callee2","_context2","navigator","clipboard","writeText","t0","_location$state","handleErrors","console","log","sent","err","_location$state2","socketId","_ref3","filter","client","disconnect","map","Navigate","to","App","_Fragment","Toaster","position","toastOptions","primary","BrowserRouter","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render"],"mappings":"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","file":"static/js/main.d020fc1a.chunk.js","sourcesContent":["const ACTIONS = {\r\n    JOIN: 'join',\r\n    JOINED: 'joined',\r\n    DISCONNECTED: 'disconnected',\r\n    CODE_CHANGE: 'code-change',\r\n    SYNC_CODE: 'sync-code',\r\n    LEAVE: 'leave'\r\n};\r\n\r\nmodule.exports = ACTIONS;","import React, { useState } from 'react'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport toast from 'react-hot-toast';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Home() {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [roomId, setRoomId] = useState('');\r\n    const [username, setUsername] = useState('');\r\n\r\n    const createNewRoom = (e) => {\r\n        e.preventDefault();\r\n        const id = uuidv4();\r\n        setRoomId(id);\r\n        // console.log(id); // generating the unique id\r\n        // !jo toast aa rha oske liye corner me \r\n        toast.success('Created a new room');\r\n\r\n    }\r\n\r\n    const joinRoom = () => {\r\n        if (!roomId || !username) {\r\n            toast.error('Room ID and username is required');\r\n            return;\r\n        }\r\n        // redirect to editor page and we are passing the username to the editor page by using the state ok\r\n        navigate(`/editor/${roomId}`, {\r\n            state: {\r\n                username,\r\n\r\n            },\r\n        });\r\n    };\r\n    // enter press krne se room join ho jaye\r\n    const handleInputEnter = (e) => {\r\n        if (e.code === 'Enter') {\r\n            joinRoom();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"homePageWrapper\">\r\n            <div className=\"formWrapper\">\r\n                <img className=\"homePageLogo\" src=\"/code-sync.png\" alt='code-sync'></img>\r\n                <h4 className=\"mainLabel\">Paste Invitaion ROOM ID</h4>\r\n                <div className=\"inputGroup\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"inputBox\"\r\n                        placeholder=\"ROOM ID\"\r\n                        onChange={(e) => setRoomId(e.target.value)}\r\n                        value={roomId}\r\n                        onKeyUp={handleInputEnter}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"inputBox\"\r\n                        placeholder=\"USERNAME\"\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                        value={username}\r\n                        onKeyUp={handleInputEnter}\r\n                    />\r\n                    <button\r\n                        className=\"btn joinBtn\"\r\n                        onClick={joinRoom}\r\n                    >Join</button>\r\n                    <span className=\"createInfo\">\r\n                        If you don't have invite then create &nbsp;\r\n                        <a onClick={createNewRoom} href=\"\" className=\"createNewBtn\">new room</a>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <footer>\r\n                <h4>Built by arvind</h4>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\n// import Avatar from 'react-avatar'\r\nfunction Client({ username }) {\r\n    return (\r\n        <div className=\"client\">\r\n            {/* <Avatar name={username} size={50} round=\"14px\" /> */}\r\n            <span className=\"userName\">{username}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Client\r\n","import React, { useEffect, useRef } from 'react';\r\nimport Codemirror from 'codemirror';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/theme/dracula.css';\r\nimport 'codemirror/mode/javascript/javascript';\r\nimport 'codemirror/addon/edit/closetag';\r\nimport 'codemirror/addon/edit/closebrackets';\r\nimport ACTIONS from '../Actions';\r\n\r\nconst Editor = ({ socketRef, roomId, onCodeChange }) => {\r\n    const editorRef = useRef(null);\r\n    useEffect(() => {\r\n        async function init() {\r\n            editorRef.current = Codemirror.fromTextArea(\r\n                document.getElementById('realtimeEditor'),\r\n                {\r\n                    mode: { name: 'javascript', json: true },\r\n                    theme: 'dracula',\r\n                    autoCloseTags: true,\r\n                    autoCloseBrackets: true,\r\n                    lineNumbers: true,\r\n                }\r\n            );\r\n\r\n            editorRef.current.on('change', (instance, changes) => {\r\n                const { origin } = changes;\r\n                const code = instance.getValue();\r\n                onCodeChange(code);\r\n                if (origin !== 'setValue') {\r\n                    socketRef.current.emit(ACTIONS.CODE_CHANGE, {\r\n                        roomId,\r\n                        code,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        init();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (socketRef.current) {\r\n            socketRef.current.on(ACTIONS.CODE_CHANGE, ({ code }) => {\r\n                if (code !== null) {\r\n                    editorRef.current.setValue(code);\r\n                }\r\n            });\r\n        }\r\n\r\n        return () => {\r\n            socketRef.current.off(ACTIONS.CODE_CHANGE);\r\n        };\r\n    }, [socketRef.current]);\r\n\r\n    return <textarea id=\"realtimeEditor\"></textarea>;\r\n};\r\n\r\nexport default Editor;","import { io } from \"socket.io-client\";\r\n\r\nexport const initSocket = async () => {\r\n    const options = {\r\n        'force new connection': true,\r\n        reconnectionAttempt: 'Infinity',\r\n        timeout: 10000,\r\n        transports: ['websocket'],\r\n    }\r\n\r\n    return io(process.env.REACT_APP_BACKEND_URL, options);\r\n}","import React, { useEffect, useRef, useState } from 'react'\r\nimport toast from 'react-hot-toast';\r\nimport Client from '../components/Client';\r\nimport Editor from '../components/Editor';\r\nimport { initSocket } from '../socket';\r\nimport ACTIONS from '../Actions';\r\nimport { Navigate, useLocation, useNavigate, useParams } from 'react-router-dom';\r\nfunction EditorPage() {\r\n\r\n    // !initialization of socket connection\r\n    const socketRef = useRef(null);\r\n\r\n    const codeRef = useRef(null);\r\n\r\n    const location = useLocation();\r\n\r\n    const { roomId } = useParams();\r\n\r\n    const reactNavigator = useNavigate();\r\n\r\n    const [clients, setClients] = useState([\r\n        // { socketId: 1, username: 'arvind c' },\r\n        // { socketId: 2, username: 'jatin' },\r\n        // { socketId: 3, username: 'Naina' },\r\n        // { socketId: 4, username: 'Anand' },\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        const init = async () => {\r\n            socketRef.current = await initSocket();\r\n\r\n            socketRef.current.on('connect_error', (err) => handleErrors(err));\r\n            socketRef.current.on('connect_failed', (err) => handleErrors(err));\r\n\r\n            function handleErrors(e) {\r\n                console.log('socket error', e);\r\n                toast.error('Socket Connection failed, try again later');\r\n                reactNavigator('/');\r\n            }\r\n\r\n            socketRef.current.emit(ACTIONS.JOIN, {\r\n                roomId,\r\n                username: location.state?.username,\r\n            });\r\n\r\n            // Listening for joined event\r\n            socketRef.current.on(ACTIONS.JOINED, ({ clients, username, socketId }) => {\r\n                if (username !== location.state?.username) {\r\n                    toast.success(`${username} joined this room.`);\r\n                }\r\n                setClients(clients);\r\n                socketRef.current.emit(ACTIONS.SYNC_CODE, {\r\n                    code: codeRef.current,\r\n                    socketId,\r\n                });\r\n            });\r\n            // Listening for disconnected\r\n            socketRef.current.on(ACTIONS.DISCONNECTED, ({ socketId, username }) => {\r\n                toast.success(`${username} left the room.`);\r\n                setClients((prev) => {\r\n                    return prev.filter(client => client.socketId !== socketId);\r\n                })\r\n            })\r\n        }\r\n        init();\r\n        // clear the listeners alwyas ok\r\n        return () => {\r\n            socketRef.current.disconnect();\r\n            socketRef.current.off(ACTIONS.JOINED);\r\n            socketRef.current.off(ACTIONS.DISCONNECTED);\r\n        }\r\n    }, [])\r\n\r\n    async function copyRoomId() {\r\n        try {\r\n            await navigator.clipboard.writeText(roomId);\r\n            toast.success(`Room Id has been copied to your clipboard`);\r\n        } catch (err) {\r\n            toast.error(`Could not copy the room id`);\r\n        }\r\n    }\r\n\r\n\r\n    function leaveRoom() {\r\n        reactNavigator('/');\r\n    }\r\n\r\n\r\n\r\n    if (!location.state) {\r\n        return <Navigate to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <div className=\"mainWrap\">\r\n            <div className='aside'>\r\n                <div className=\"asideInner\">\r\n                    <div className=\"logo\">\r\n                        <img\r\n                            className=\"logoImage\"\r\n                            src=\"/code-sync.png\"\r\n                            alt='logo' />\r\n                    </div>\r\n                    <h3>Connected</h3>\r\n                    <div className=\"clientsList\">\r\n                        {\r\n                            clients.map((client) => (\r\n                                <Client\r\n                                    key={client.socketId}\r\n                                    username={client.username}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <button className=\"btn copyBtn\" onClick={copyRoomId}>\r\n                    Copy ROOM ID\r\n                </button>\r\n                <button className='btn leaveBtn' onClick={leaveRoom}>\r\n                    Leave\r\n                </button>\r\n            </div>\r\n            <div className=\"editorWrap\">\r\n                <Editor socketRef={socketRef} roomId={roomId} onCodeChange={(code) => {\r\n                    codeRef.current = code\r\n                }} />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditorPage\r\n","import './App.css';\n// !we need to import this to go to the pages of editor and home to switch pages \nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport Home from './pages/Home'\nimport EditorPage from './pages/EditorPage'\nimport { Toaster } from 'react-hot-toast';\nfunction App() {\n  return (\n    <>\n      <div>\n        <Toaster\n          position=\"top-right\"\n          toastOptions={{\n            success: {\n              theme: {\n                primary: '#4aed88'\n              }\n            }\n          }}\n        >\n        </Toaster>\n      </div>\n\n      <BrowserRouter>\n        <Routes>\n          <Route path='/' element={<Home />}></Route>\n          {/* room id is dynamic here ok */}\n          <Route path='/editor/:roomId' element={<EditorPage />}></Route>\n        </Routes>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <>\n    <App />\n  </>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}